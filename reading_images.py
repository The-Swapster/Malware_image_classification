import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import cv2 
import os 
import seaborn as sns
from sklearn.model_selection import train_test_split

# reading the classes, labels, and images
label = []
d = '/content/drive/MyDrive/malimg'
for filename in os.listdir(d):
  label.append(filename)
data = []
classes = []
for l in label: 
    path = os.path.join(d, l)
    for img in os.listdir(path):
        try:
          img_arr = cv2.imread(os.path.join(path, img), cv2.IMREAD_GRAYSCALE)
          resized_arr = cv2.resize(img_arr, (32, 32)) # Reshaping images to preferred size
          data.append(resized_arr)
          classes.append(label.index(l))
        except Exception as e:
          print(e)

# plotting the number of images in classes
plt.title('Distribution of Images for Malware Classes')
g = sns.countplot(classes)
g.set_xticklabels(g.get_xticklabels(),rotation=90)

# converting to numpy array
data = np.array(data)
classes = np.array(classes)

# normalizing the data
data = data/255.0

# checking the type and shape of data and classes
print(type(data))
print('data shape:', data.shape)
print(type(classes))
print('classes shape:', classes.shape)

#looking at the first image
index = 0
print(data[index])
#looking as an image
img = plt.imshow(data[index])
#printing the label of the image
print('The image label is: ', classes[index])
#print the image class
print('The image class is: ', label[classes[index]])

classes_cat = to_categorical(classes)
#print all of the new labels
print(classes_cat)
#print an example of the new labels
print(classes_cat[0])

# splitting data in training and testing with test size of 0.2
x_train, x_test, y_train, y_test = train_test_split(data, classes_cat, test_size=0.2)

# converting x_train and x_test to numpy array and reshaped array to -1, 32, 32, 1
x_train = x_train.reshape(-1, 32, 32, 1)
y_train = np.array(y_train)
x_test = x_test.reshape(-1, 32, 32, 1)
y_test = np.array(y_test)
